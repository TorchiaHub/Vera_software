"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const authController_1 = require("../controllers/authController");
const errorHandler_1 = require("../middleware/errorHandler");
const auth_1 = require("../middleware/auth");
const validation_1 = require("../middleware/validation");
const router = (0, express_1.Router)();
router.post('/register', (0, validation_1.validate)(validation_1.schemas.register), (0, errorHandler_1.asyncHandler)(authController_1.authController.register));
router.post('/login', (0, validation_1.validate)(validation_1.schemas.login), (0, errorHandler_1.asyncHandler)(authController_1.authController.login));
router.post('/logout', (0, errorHandler_1.asyncHandler)(authController_1.authController.logout));
router.post('/refresh', (0, errorHandler_1.asyncHandler)(authController_1.authController.refreshToken));
router.post('/forgot-password', (0, errorHandler_1.asyncHandler)(authController_1.authController.forgotPassword));
router.post('/reset-password', (0, errorHandler_1.asyncHandler)(authController_1.authController.resetPassword));
router.post('/change-password', auth_1.authenticate, (0, validation_1.validate)(validation_1.schemas.changePassword), (0, errorHandler_1.asyncHandler)(authController_1.authController.changePassword));
router.post('/verify-email', (0, errorHandler_1.asyncHandler)(authController_1.authController.verifyEmail));
router.post('/resend-verification', (0, errorHandler_1.asyncHandler)(authController_1.authController.resendVerification));
router.get('/profile', auth_1.authenticate, (0, errorHandler_1.asyncHandler)(authController_1.authController.getProfile));
router.put('/profile', auth_1.authenticate, (0, validation_1.validate)(validation_1.schemas.userUpdate), (0, errorHandler_1.asyncHandler)(authController_1.authController.updateProfile));
exports.default = router;
//# sourceMappingURL=authRoutes.js.map